# --- QMIX specific parameters with large networks ---
# for 3s5z_vs_3s6z

# use epsilon greedy action selector
action_selector: "epsilon_greedy"
epsilon_start: 1.0
epsilon_finish: 0.05
epsilon_anneal_time: 100000 

runner: "parallel"
batch_size_run: 8 
buffer_size: 5000 
batch_size: 128
optimizer: 'adam'

t_max: 10050000

# update the target network every {} episodes
target_update_interval: 200

# parameters of the transformer agent
mac: "n_mac"
agent: "n_updet"
agent_output_type: q
feat_dim: 6 # 4 features for each entity: (pos_x, pos_y, depth, distance)
emb: 32 # embedding dimension of transformer
heads: 3 # head number of transformer
depth: 2 # block number of transformer

# to keep the token dimension fixed, observaion id and last action should not be included
obs_agent_id: False # Include the agent's one_hot id in the observation
obs_last_action: False # Include the agent's last action (one_hot) in the observation

learner: "nq_learner"
mixer: "qmix_graph"
#mixing_embed_dim: 64 the graph embeddings are used instead of the embedding layer
hypernet_embed: 256
lr: 0.001 # Learning rate for agents
td_lambda: 0.6
optimizer: 'adam'
weight_decay: 0

# graph convoluion layer
graph_emb_dim: 64
graph_encoder_hidden_sizes: [128,]
graph_attention_type: "general"
grap_n_gcn_layers: 2
gcn_bias: True
residual: True

# rnn layer normalization
use_layer_norm: False

# orthogonal init for DNN
use_orthogonal: False
gain: 0.01

# Priority experience replay
use_per: False
per_alpha: 0.6
per_beta: 0.4
return_priority: False

name: "qmix_graph_updet"
